// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  theme     Theme    @default(SYSTEM)
  language  Language @default(JA)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  feeds              Feed[]
  passwordResetTokens PasswordResetToken[]

  @@map("users")
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String   @map("user_id")
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")
  used      Boolean  @default(false)

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("password_reset_tokens")
}

model Feed {
  id            String    @id @default(cuid())
  title         String
  url           String
  siteUrl       String?   @map("site_url")
  description   String?
  favicon       String?
  userId        String    @map("user_id")
  lastFetchedAt DateTime? @map("last_fetched_at")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  // Relations
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  articles Article[]

  @@unique([userId, url])
  @@map("feeds")
}

model Article {
  id          String   @id @default(cuid())
  title       String
  url         String   @unique
  description String?
  publishedAt DateTime @map("published_at")
  feedId      String   @map("feed_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relations
  feed Feed @relation(fields: [feedId], references: [id], onDelete: Cascade)

  @@map("articles")
}

enum Theme {
  SYSTEM
  LIGHT
  DARK
}

enum Language {
  JA
  EN
}